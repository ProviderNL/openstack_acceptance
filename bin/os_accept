#!/usr/bin/env ruby
require 'bundler/setup'
require 'thor'
require 'yaml'
require 'logger'


class OsAccept < Thor
  @@logger = Logger.new($stdout)
  desc 'init','initialize: create configfile with ask'
  option :force, :type => :boolean, :aliases => :f
  no_tasks do
    def add_to_admin_config(message, key)
      say(message)
      @config[:admin][key.to_sym] = ask('?')
    end

    def add_to_member_config(message, key)
      say(message)
      @config[:member][key.to_sym] = ask('? ')
    end
  end

  def init
    file = File.expand_path('../../.os_accept.yml',__FILE__)
    if File.exists?(file)
      unless options[:force]
        @@logger.warn 'ConfigFile already exist. Remove first or use --force option to overwrite.'
        exit 0
      else
        @@logger.warn 'Notice! ConfigFile will overwrite!!'
      end
    end

    @config = Hash.new
    @config[:platform] = Hash.new
    @config[:admin] = Hash.new
    @config[:member] = Hash.new

    # build platform
    say('Input openstack_auth_url')
    @config[:platform][:openstack_auth_url] = ask('? ')

    # build admin (dummy)
    add_to_admin_config 'Input openstack_admin username', 'name'
    add_to_admin_config 'Input openstack_admin_api_key(password)', 'api_key'
    add_to_admin_config 'Input openstack_admin project name', 'project'
    add_to_admin_config 'Input openstack_admin domain', 'domain'

    # build user
    add_to_member_config 'Input openstack_member_username', 'name'
    add_to_member_config 'Input openstack_member_api_key(password)', 'api_key'
    add_to_member_config 'Input openstack_member_current_tenant', 'tenant'
    add_to_member_config 'Input openstack_member_ssh_keyname', 'ssh_key'

    File.open(file, 'w') do |f|
      f.write(@config.to_yaml)
    end
    @@logger.info 'ConfigFile created.'
  end
end

OsAccept.start
